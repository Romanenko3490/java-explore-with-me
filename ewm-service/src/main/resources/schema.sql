CREATE TABLE IF NOT EXISTS users
(
    id    BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name  VARCHAR(255)        NOT NULL,
    email VARCHAR(512) UNIQUE NOT NULL
);

CREATE TABLE IF NOT EXISTS categories
(
    id   BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(125) UNIQUE NOT NULL
);

CREATE TABLE IF NOT EXISTS events
(
    id                 BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    annotation         VARCHAR(1000) NOT NULL,
    category_id        BIGINT        NOT NULL,
    description        VARCHAR(2000) NOT NULL,
    event_date         TIMESTAMP     NOT NULL,
    lat                DECIMAL(8, 6) CHECK (lat >= -90 AND lat <= 90),
    lon                DECIMAL(9, 6) CHECK (lon >= -180 AND lon <= 180),
    paid               BOOLEAN       NOT NULL DEFAULT FALSE,
    participant_limit  INTEGER                DEFAULT 0,
    request_moderation BOOLEAN       NOT NULL DEFAULT TRUE,
    title              VARCHAR(120)  NOT NULL,
    initiator_id       BIGINT        NOT NULL,
    created_on         TIMESTAMP              DEFAULT CURRENT_TIMESTAMP,
    published_on       TIMESTAMP,
    state              VARCHAR(20)            DEFAULT 'PENDING',
    confirmed_requests INTEGER                DEFAULT 0,
    views              BIGINT                 DEFAULT 0,

    CONSTRAINT fk_events_category FOREIGN KEY (category_id) REFERENCES categories (id) ON DELETE CASCADE,
    CONSTRAINT fk_events_initiator FOREIGN KEY (initiator_id) REFERENCES users (id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS requests
(
    id           BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    event_id     BIGINT NOT NULL,
    created      TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    requester_id BIGINT NOT NULL,
    status       VARCHAR   DEFAULT 'PENDING',

    CONSTRAINT fk_event_id FOREIGN KEY (event_id) REFERENCES events (id) ON DELETE CASCADE,
    CONSTRAINT fk_requester_id FOREIGN KEY (requester_id) REFERENCES users (id) ON DELETE CASCADE
);

CREATE INDEX IF NOT EXISTS idx_users_email ON users (email);
CREATE INDEX IF NOT EXISTS idx_categories_name ON categories (name);